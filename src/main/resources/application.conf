include "justin.conf"

akka {
  extensions = [
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$",
    "de.heikoseeberger.constructr.ConstructrExtension",
    "akka.cluster.client.ClusterClientReceptionist"
  ]

  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "justin.db.actors.protocol.RegisterNode" = kryo

      "justin.db.actors.protocol.StorageNodeWriteDataLocal" = kryo

      "justin.db.actors.protocol.StorageNodeSuccessfulWrite" = kryo
      "justin.db.actors.protocol.StorageNodeFailedWrite"     = kryo
      "justin.db.actors.protocol.StorageNodeConflictedWrite" = kryo

      "justin.db.actors.protocol.StorageNodeLocalRead"      = kryo

      "justin.db.actors.protocol.StorageNodeFoundRead"      = kryo
      "justin.db.actors.protocol.StorageNodeConflictedRead" = kryo
      "justin.db.actors.protocol.StorageNodeNotFoundRead"   = kryo
      "justin.db.actors.protocol.StorageNodeFailedRead"     = kryo
    }
    kryo {
      type = "nograph"
      idstrategy = "explicit"
      max-buffer-size = 10485760 # 10MB
      use-manifests = false
      use-unsafe = false
      implicit-registration-logging = true
      kryo-trace = false
      kryo-custom-serializer-init = "justin.db.kryo.SerializerInit"
    }
    allow-java-serialization = on
    provider = cluster
  }

  remote.log-remote-lifecycle-events = off
  remote.netty.tcp.hostname = ${justin.netty-tcp-hostname}
  remote.netty.tcp.port = ${justin.netty-tcp-port}
  remote.netty.tcp.bind-hostname = ${justin.netty-tcp-bindhostname}
  remote.netty.tcp.bind-port = ${justin.netty-tcp-bindport}

  # Disable legacy metrics in akka-cluster.
  cluster.metrics.enabled = off
  cluster.role.storagenode.min-nr-of-members = ${justin.ring.members-count}
  cluster.http.management.hostname = "0.0.0.0"
}

constructr {
  coordination {
    host = 0.0.0.0
    port = 2379
  }

  coordination-timeout = 3 seconds  // Maximum response time for coordination service (e.g. etcd)
  max-nr-of-seed-nodes = 0          // Any nonpositive value means Int.MaxValue
  nr-of-retries        = 2          // Nr. of tries are nr. of retries + 1
  refresh-interval     = 30 seconds // TTL is refresh-interval * ttl-factor
  retry-delay          = 3 seconds  // Give coordination service (e.g. etcd) some delay before retrying
  ttl-factor           = 2.0        // Must be greater or equal 1 + ((coordination-timeout * (1 + nr-of-retries) + retry-delay * nr-of-retries)/ refresh-interval)!

  join-timeout = 15 seconds // Might depend on cluster size and network properties
}
